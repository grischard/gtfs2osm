-- from http://robots.thoughtbot.com/improving-the-command-line-postgres-experience/
\set QUIET 1
\timing
\set ON_ERROR_ROLLBACK interactive
-- Verbose error reports.
\set VERBOSITY verbose
-- Use table format (with headers across the top) by default, but switch to
-- expanded table format when there's a lot of data, which makes it much
-- easier to read.
\x auto
\set PROMPT1 '%[%033[1m%]%M %n@%/%R%[%033[0m%]%# '
\set PROMPT2 '[more] %R > '
-- If a command is run more than once in a row, only store it once in the
-- history.
\set HISTCONTROL ignoredups
-- Autocomplete keywords (like SELECT) in upper-case, even if you started
-- typing them in lower case.
\set COMP_KEYWORD_CASE upper
-- Use a separate history file per-database.
\set HISTFILE ~/.psql_history- :DBNAME
-- By default, NULL displays as an empty space. Is it actually an empty
-- string, or is it null? This makes that distinction visible.
\pset null '[NULL]'
\unset QUIET
-- Database creation script for the snapshot PostgreSQL schema.

-- Drop all tables if they exist.
DROP TABLE IF EXISTS actions;
DROP TABLE
Time: 0.410 ms
DROP TABLE IF EXISTS users;
DROP TABLE
Time: 5.194 ms
DROP TABLE IF EXISTS nodes;
DROP TABLE
Time: 2.735 ms
DROP TABLE IF EXISTS ways;
DROP TABLE
Time: 1.768 ms
DROP TABLE IF EXISTS way_nodes;
DROP TABLE
Time: 1.164 ms
DROP TABLE IF EXISTS relations;
DROP TABLE
Time: 1.469 ms
DROP TABLE IF EXISTS relation_members;
DROP TABLE
Time: 1.830 ms
DROP TABLE IF EXISTS schema_info;
DROP TABLE
Time: 1.995 ms

-- Drop all stored procedures if they exist.
DROP FUNCTION IF EXISTS osmosisUpdate();
DROP FUNCTION
Time: 0.854 ms


-- Create a table which will contain a single row defining the current schema version.
CREATE TABLE schema_info (
    version integer NOT NULL
);
CREATE TABLE
Time: 3.808 ms


-- Create a table for users.
CREATE TABLE users (
    id int NOT NULL,
    name text NOT NULL
);
CREATE TABLE
Time: 2.137 ms


-- Create a table for nodes.
CREATE TABLE nodes (
    id bigint NOT NULL,
    version int NOT NULL,
    user_id int NOT NULL,
    tstamp timestamp without time zone NOT NULL,
    changeset_id bigint NOT NULL,
    tags hstore
);
CREATE TABLE
Time: 2.080 ms
-- Add a postgis point column holding the location of the node.
SELECT AddGeometryColumn('nodes', 'geom', 4326, 'POINT', 2);
               addgeometrycolumn                
------------------------------------------------
 public.nodes.geom SRID:4326 TYPE:POINT DIMS:2 
(1 row)

Time: 38.847 ms


-- Create a table for ways.
CREATE TABLE ways (
    id bigint NOT NULL,
    version int NOT NULL,
    user_id int NOT NULL,
    tstamp timestamp without time zone NOT NULL,
    changeset_id bigint NOT NULL,
    tags hstore,
    nodes bigint[]
);
CREATE TABLE
Time: 2.277 ms


-- Create a table for representing way to node relationships.
CREATE TABLE way_nodes (
    way_id bigint NOT NULL,
    node_id bigint NOT NULL,
    sequence_id int NOT NULL
);
CREATE TABLE
Time: 1.205 ms


-- Create a table for relations.
CREATE TABLE relations (
    id bigint NOT NULL,
    version int NOT NULL,
    user_id int NOT NULL,
    tstamp timestamp without time zone NOT NULL,
    changeset_id bigint NOT NULL,
    tags hstore
);
CREATE TABLE
Time: 2.024 ms

-- Create a table for representing relation member relationships.
CREATE TABLE relation_members (
    relation_id bigint NOT NULL,
    member_id bigint NOT NULL,
    member_type character(1) NOT NULL,
    member_role text NOT NULL,
    sequence_id int NOT NULL
);
CREATE TABLE
Time: 7.947 ms


-- Configure the schema version.
INSERT INTO schema_info (version) VALUES (6);
INSERT 0 1
Time: 0.539 ms


-- Add primary keys to tables.
ALTER TABLE ONLY schema_info ADD CONSTRAINT pk_schema_info PRIMARY KEY (version);
ALTER TABLE
Time: 1.943 ms

ALTER TABLE ONLY users ADD CONSTRAINT pk_users PRIMARY KEY (id);
ALTER TABLE
Time: 1.165 ms

ALTER TABLE ONLY nodes ADD CONSTRAINT pk_nodes PRIMARY KEY (id);
ALTER TABLE
Time: 1.789 ms

ALTER TABLE ONLY ways ADD CONSTRAINT pk_ways PRIMARY KEY (id);
ALTER TABLE
Time: 1.936 ms

ALTER TABLE ONLY way_nodes ADD CONSTRAINT pk_way_nodes PRIMARY KEY (way_id, sequence_id);
ALTER TABLE
Time: 0.936 ms

ALTER TABLE ONLY relations ADD CONSTRAINT pk_relations PRIMARY KEY (id);
ALTER TABLE
Time: 0.798 ms

ALTER TABLE ONLY relation_members ADD CONSTRAINT pk_relation_members PRIMARY KEY (relation_id, sequence_id);
ALTER TABLE
Time: 1.821 ms


-- Add indexes to tables.
CREATE INDEX idx_nodes_geom ON nodes USING gist (geom);
CREATE INDEX
Time: 1.616 ms

CREATE INDEX idx_way_nodes_node_id ON way_nodes USING btree (node_id);
CREATE INDEX
Time: 1.081 ms

CREATE INDEX idx_relation_members_member_id_and_type ON relation_members USING btree (member_id, member_type);
CREATE INDEX
Time: 0.813 ms


-- Set to cluster nodes by geographical location.
ALTER TABLE ONLY nodes CLUSTER ON idx_nodes_geom;
ALTER TABLE
Time: 0.325 ms

-- Set to cluster the tables showing relationship by parent ID and sequence
ALTER TABLE ONLY way_nodes CLUSTER ON pk_way_nodes;
ALTER TABLE
Time: 0.299 ms
ALTER TABLE ONLY relation_members CLUSTER ON pk_relation_members;
ALTER TABLE
Time: 0.313 ms

-- There are no sensible CLUSTER orders for users or relations.
-- Depending on geometry columns different clustings of ways may be desired.

-- Create the function that provides "unnest" functionality while remaining compatible with 8.3.
CREATE OR REPLACE FUNCTION unnest_bbox_way_nodes() RETURNS void AS $$
DECLARE
	previousId ways.id%TYPE;
	currentId ways.id%TYPE;
	result bigint[];
	wayNodeRow way_nodes%ROWTYPE;
	wayNodes ways.nodes%TYPE;
BEGIN
	FOR wayNodes IN SELECT bw.nodes FROM bbox_ways bw LOOP
		FOR i IN 1 .. array_upper(wayNodes, 1) LOOP
			INSERT INTO bbox_way_nodes (id) VALUES (wayNodes[i]);
		END LOOP;
	END LOOP;
END;
$$ LANGUAGE plpgsql;
CREATE FUNCTION
Time: 0.620 ms


-- Create customisable hook function that is called within the replication update transaction.
CREATE FUNCTION osmosisUpdate() RETURNS void AS $$
DECLARE
BEGIN
END;
$$ LANGUAGE plpgsql;
CREATE FUNCTION
Time: 0.479 ms

-- Manually set statistics for the way_nodes and relation_members table
-- Postgres gets horrible counts of distinct values by sampling random pages
-- and can be off by an 1-2 orders of magnitude

-- Size of the ways table / size of the way_nodes table
ALTER TABLE way_nodes ALTER COLUMN way_id SET (n_distinct = -0.08);
ALTER TABLE
Time: 0.282 ms

-- Size of the nodes table / size of the way_nodes table * 0.998
-- 0.998 is a factor for nodes not in ways
ALTER TABLE way_nodes ALTER COLUMN node_id SET (n_distinct = -0.83);
ALTER TABLE
Time: 0.278 ms

-- API allows a maximum of 2000 nodes/way. Unlikely to impact query plans.
ALTER TABLE way_nodes ALTER COLUMN sequence_id SET (n_distinct = 2000);
ALTER TABLE
Time: 0.323 ms

-- Size of the relations table / size of the relation_members table
ALTER TABLE relation_members ALTER COLUMN relation_id SET (n_distinct = -0.09);
ALTER TABLE
Time: 0.330 ms

-- Based on June 2013 data
ALTER TABLE relation_members ALTER COLUMN member_id SET (n_distinct = -0.62);
ALTER TABLE
Time: 0.332 ms

-- Based on June 2013 data. Unlikely to impact query plans.
ALTER TABLE relation_members ALTER COLUMN member_role SET (n_distinct = 6500);
ALTER TABLE
Time: 0.344 ms

-- Based on June 2013 data. Unlikely to impact query plans.
ALTER TABLE relation_members ALTER COLUMN sequence_id SET (n_distinct = 10000);
ALTER TABLE
Time: 0.276 ms
-- from http://robots.thoughtbot.com/improving-the-command-line-postgres-experience/
\set QUIET 1
\timing
\set ON_ERROR_ROLLBACK interactive
-- Verbose error reports.
\set VERBOSITY verbose
-- Use table format (with headers across the top) by default, but switch to
-- expanded table format when there's a lot of data, which makes it much
-- easier to read.
\x auto
\set PROMPT1 '%[%033[1m%]%M %n@%/%R%[%033[0m%]%# '
\set PROMPT2 '[more] %R > '
-- If a command is run more than once in a row, only store it once in the
-- history.
\set HISTCONTROL ignoredups
-- Autocomplete keywords (like SELECT) in upper-case, even if you started
-- typing them in lower case.
\set COMP_KEYWORD_CASE upper
-- Use a separate history file per-database.
\set HISTFILE ~/.psql_history- :DBNAME
-- By default, NULL displays as an empty space. Is it actually an empty
-- string, or is it null? This makes that distinction visible.
\pset null '[NULL]'
\unset QUIET
-- Add a postgis GEOMETRY column to the way table for the purpose of storing the full linestring of the way.
SELECT AddGeometryColumn('ways', 'linestring', 4326, 'GEOMETRY', 2);
                   addgeometrycolumn                    
--------------------------------------------------------
 public.ways.linestring SRID:4326 TYPE:GEOMETRY DIMS:2 
(1 row)

Time: 15.349 ms

-- Add an index to the bbox column.
CREATE INDEX idx_ways_linestring ON ways USING gist (linestring);
CREATE INDEX
Time: 1.341 ms

-- Cluster table by geographical location.
CLUSTER ways USING idx_ways_linestring;
CLUSTER
Time: 7.638 ms
~/osm/gtfs/luxembourg ~/Documents/code/gtfs2osm/osm_extract
~/Documents/code/gtfs2osm/osm_extract
